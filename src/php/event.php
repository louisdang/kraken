<?php

/**
 * event.php
 *
 * Tests for eventual Varnish event logging.
 * This formats the incoming request at /event/$topic?query&string
 * along with other headers into the event log format
 * described at
 * https://www.mediawiki.org/wiki/Analytics/Kraken/Data_Formats#Event_Data_Format
 * and sends the formatted event line to a Kafka broker.
 */

$kafka_lib_path = '/home/otto/kafka-0.7.1-incubating/clients/php/src/lib';
set_include_path(get_include_path() . ':' . $kafka_lib_path);
require 'autoloader.php';
define('PRODUCE_REQUEST_ID', 0);

$debug = true;

$topic      = str_replace('/', '', $_SERVER['PATH_INFO']);
$message    = format_event($topic);

$bytes_sent = send_kafka_message($topic, $message);

if ($debug)
{
	echo $message . "\n";
	if (!$bytes_sent) {
		echo "<br/>\nERROR: Failed sending message to Kafka\n";
	}
}
else
{
	header("HTTP/1.0 204 No Content");
}


function send_kafka_message($topic, $message) {
	$host = 'analytics1021.eqiad.wmnet';
	$port = 9092;
	$producer = new Kafka_Producer($host, $port);
	$bytes = $producer->send(array($message), "event-$topic");
	return $bytes;
}






function format_event($topic) {
	// Request path
	// Query params
	// HTTP host (aka request hostname)
	// Timestamp (in ISO 8601 format (plus milliseconds), according to the server's clock.)
	// Client IP (aka remote address/host)
	// X-Forwarded-For
	// Referer
	// Accept-Language
	// Cookie
	// X-WAP-Profile
	// User-Agent
	// Server-Hostname
	// Sequence Number (generated by varnishncsa instance).
	
	
	$line = sprintf("/event/%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s",
		$topic, 
		$_SERVER['QUERY_STRING']             ? $_SERVER['QUERY_STRING'] : '-',
		$_SERVER['HTTP_HOST'],
		date("c"),
		$_SERVER['REMOTE_ADDR'],
		$_SERVER['HTTP_X_FORWARDED_FOR']     ? $_SERVER['HTTP_X_FORWARDED_FOR'] : '-',
		$_SERVER['HTTP_REFERER']             ? $_SERVER['HTTP_REFERER'] : '-',
		$_SERVER['HTTP_ACCEPT_LANGUAGE']     ? $_SERVER['HTTP_ACCEPT_LANGUAGE'] : '-',
		$_SERVER['HTTP_COOKIE']              ? $_SERVER['HTTP_COOKIE'] : '-',
		$_SERVER['HTTP_X_WAP_PROFILE']       ? $_SERVER['HTTP_X_WAP_PROFILE'] : '-',
		$_SERVER['HTTP_USER_AGENT']          ? $_SERVER['HTTP_USER_AGENT'] : '-',
		`hostname`,
		sequence()
	);
	return $line;
}

/**
 * Stores a sequence number in /tmp/event.seq.
 * increments the number and returns it.
 */
function sequence() {
	$count = trim(file_get_contents("/tmp/event.seq"));
	$count = $count ? $count + 1 : 1;
	file_put_contents("/tmp/event.seq", $count);
	return $count;
}
?>